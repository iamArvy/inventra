// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  passwordHash  String
  emailVerified Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  role          UserRole? @relation("UserToUserRole")
  sessions      Session[]
}

model Role {
  id        String     @id @default(cuid())
  name      String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  userRoles UserRole[] @relation("RoleToUserRole")
}

model UserRole {
  id        String   @id @default(cuid())
  userId    String   @unique
  roleId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation("UserToUserRole", fields: [userId], references: [id])
  role Role @relation("RoleToUserRole", fields: [roleId], references: [id])
}

model Session {
  id                 String    @id @default(cuid())
  userId             String
  userAgent          String
  ipAddress          String
  hashedRefreshToken String?
  expiresAt          DateTime
  revokedAt          DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])
}
