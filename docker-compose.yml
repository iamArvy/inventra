services:
  db:
    image: postgres:latest
    container_name: inventory-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    networks:
      - inventory_network

  redis:
    image: redis:latest
    container_name: redis

  migrate-auth:
    build:
      context: .
      dockerfile: ./services/auth/Dockerfile.migrate
    environment:
      DATABASE_URL: ${AUTH_DB_URL}
    depends_on:
      - db
    networks:
      - inventory_network

  migrate-product:
    build:
      context: .
      dockerfile: ./services/product/Dockerfile.migrate
    environment:
      DATABASE_URL: ${PRODUCT_DB_URL}
    depends_on:
      - db
    networks:
      - inventory_network

  migrate-store:
    build:
      context: .
      dockerfile: ./services/store/Dockerfile.migrate
    environment:
      DATABASE_URL: ${STORE_DB_URL}
    depends_on:
      - db
    networks:
      - inventory_network

  auth-service:
    build:
      context: ./services/auth
    environment:
      DATABASE_URL: ${AUTH_DB_URL}
      JWT_SECRET: ${JWT_SECRET}
      REDIS_URL: redis:6379
    depends_on:
      - db
      - migrate-auth
    networks:
      - inventory_network

  product-service:
    build:
      context: ./services/product
    environment:
      DATABASE_URL: ${PRODUCT_DB_URL}
      REDIS_URL: redis:6379
    depends_on:
      - db
      - migrate-product
    networks:
      - inventory_network

  store-service:
    build:
      context: ./services/store
    environment:
      DATABASE_URL: ${STORE_DB_URL}
      REDIS_URL: redis:6379
    depends_on:
      - db
      - migrate-store
    networks:
      - inventory_network

  store-dashboard-gateway:
    build:
      context: ./gateways/store-dashboard
    environment:
      AUTH_GRPC_URL: auth-service:5000
      GRPC_PRODUCT_URL: product-service:5000
      STORE_GRPC_URL: store-service:5000
    ports:
      - "3000:3000"
    depends_on:
      - auth-service
      - product-service
      - store-service
    networks:
      - inventory_network

networks:
  inventory_network:
